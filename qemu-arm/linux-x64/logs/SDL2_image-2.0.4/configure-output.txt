
Running sdl2-image configure...
`configure' configures this package to adapt to many kinds of systems.

Usage: /home/automark/Work/qemu-arm-dev/sources/SDL2_image-2.0.4/configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/PACKAGE]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-imageio        use native Mac OS X frameworks for loading images
                          [default=yes]
  --disable-sdltest       Do not try to compile and run a test SDL program
  --enable-bmp            support loading BMP/ICO/CUR images [default=yes]
  --enable-gif            support loading GIF images [default=yes]
  --enable-jpg            support loading JPG images [default=yes]
  --enable-jpg-shared     dynamically load JPG support [[default=yes]]
  --enable-lbm            support loading LBM images [default=yes]
  --enable-pcx            support loading PCX images [default=yes]
  --enable-png            support loading PNG images [default=yes]
  --enable-png-shared     dynamically load PNG support [[default=yes]]
  --enable-pnm            support loading PNM images [default=yes]
  --enable-svg            support loading SVG images [default=yes]
  --enable-tga            support loading TGA images [default=yes]
  --enable-tif            support loading TIFF images [default=yes]
  --enable-tif-shared     dynamically load TIFF support [[default=yes]]
  --enable-xcf            support loading XCF images [default=yes]
  --enable-xpm            support loading XPM images [default=yes]
  --enable-xv             support loading XV images [default=yes]
  --enable-webp           support loading WEBP images [default=yes]
  --enable-webp-shared    dynamically load WEBP support [[default=yes]]

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-pic              try to use only PIC/non-PIC objects [default=use
                          both]
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sdl-prefix=PFX   Prefix where SDL is installed (optional)
  --with-sdl-exec-prefix=PFX Exec prefix where SDL is installed (optional)

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  OBJC        Objective C compiler command
  OBJCFLAGS   Objective C compiler flags
  PKG_CONFIG  path to pkg-config utility
  SDL_CFLAGS  C compiler flags for SDL, overriding pkg-config
  SDL_LIBS    linker flags for SDL, overriding pkg-config
  LIBPNG_CFLAGS
              C compiler flags for LIBPNG, overriding pkg-config
  LIBPNG_LIBS linker flags for LIBPNG, overriding pkg-config
  LIBWEBP_CFLAGS
              C compiler flags for LIBWEBP, overriding pkg-config
  LIBWEBP_LIBS
              linker flags for LIBWEBP, overriding pkg-config

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.

[bash /home/automark/Work/qemu-arm-dev/sources/SDL2_image-2.0.4/configure --prefix=/home/automark/Work/qemu-arm-dev/linux-x64/install/libs --build=x86_64-pc-linux-gnu --host=x86_64-pc-linux-gnu --target=x86_64-pc-linux-gnu --enable-jpg --enable-png --disable-sdltest --disable-jpg-shared --disable-png-shared --disable-bmp --disable-gif --disable-lbm --disable-pcx --disable-pnm --disable-tga --disable-tif --disable-tif-shared --disable-xcf --disable-xpm --disable-xv --disable-webp --disable-webp-shared]
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking for x86_64-pc-linux-gnu-gcc... gcc-7
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc-7 accepts -g... yes
checking for gcc-7 option to accept ISO C89... none needed
checking whether gcc-7 understands -c and -o together... yes
checking for a sed that does not truncate output... /bin/sed
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for fgrep... /bin/grep -F
checking for ld used by gcc-7... ld
checking if the linker (ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... gcc-nm-7
checking the name lister (gcc-nm-7) interface... BSD nm
checking whether ln -s works... yes
checking the maximum length of command line arguments... 1572864
checking whether the shell understands some XSI constructs... yes
checking whether the shell understands "+="... yes
checking for ld option to reload object files... -r
checking for x86_64-pc-linux-gnu-objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for x86_64-pc-linux-gnu-ar... gcc-ar-7
checking for x86_64-pc-linux-gnu-strip... strip
checking for x86_64-pc-linux-gnu-ranlib... gcc-ranlib-7
checking command to parse gcc-nm-7 output from gcc-7 object... ok
checking how to run the C preprocessor... gcc-7 -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc-7 supports -fno-rtti -fno-exceptions... yes
checking for gcc-7 option to produce PIC... -fPIC -DPIC
checking if gcc-7 PIC flag -fPIC -DPIC works... yes
checking if gcc-7 static flag -static works... no
checking if gcc-7 supports -c -o file.o... yes
checking if gcc-7 supports -c -o file.o... (cached) yes
checking whether the gcc-7 linker (ld -m elf_x86_64) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports the include directive... yes (GNU style)
checking whether make supports nested variables... yes
checking dependency style of gcc-7... gcc3
checking for x86_64-pc-linux-gnu-gcc... (cached) gcc-7
checking whether we are using the GNU C compiler... (cached) yes
checking whether gcc-7 accepts -g... (cached) yes
checking for gcc-7 option to accept ISO C89... (cached) none needed
checking whether gcc-7 understands -c and -o together... (cached) yes
checking for x86_64-pc-linux-gnu-gcc... no
checking for x86_64-pc-linux-gnu-objcc... no
checking for x86_64-pc-linux-gnu-objc... no
checking for x86_64-pc-linux-gnu-cc... no
checking for x86_64-pc-linux-gnu-CC... no
checking for gcc... gcc
checking whether we are using the GNU Objective C compiler... no
checking whether gcc accepts -g... no
checking dependency style of gcc... gcc3
checking for inline... inline
checking whether make sets $(MAKE)... (cached) yes
checking for windres... windres
checking pkg-config is at least version 0.9.0... (/home/automark/Work/qemu-arm-dev/linux-x64/install/libs/lib/pkgconfig:) | pkg-config --atleast-pkgconfig-version 0.9.0 -> 0 []
yes
checking for SDL... yes
checking jpeglib.h usability... yes
checking jpeglib.h presence... yes
checking for jpeglib.h... yes
checking for jpeg_CreateDecompress in -ljpeg... yes
checking for LIBPNG... yes
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating SDL2_image.spec
config.status: creating SDL2_image.pc
config.status: executing libtool commands
config.status: executing depfiles commands
